package com.daxin

/**
 *
 * SCALA高级特性
 * 1 作为值的函数
 *
 *
 * Scala混合了面向对象和函数式的特性，我们通常将可以做为参数传递到方法中的表达式叫做函数。
 * 在函数式编程语言中，函数是“头等公民”，高阶函数包含：作为值的函数、匿名函数、闭包、柯里化等等。
 *
 *
 *
 */
object Main1 extends App {

  /**
   * 
   *
   * 可以像任何其他数据类型一样被传递和操作的函数，每当你想要给算法传入具体动作时这个特性就会变得非常有用。
   */

  val arr1 = Array(1, 2, 3, 4, 5)

  /**
   *  函数的定义 ：
   * 定义函数时格式：val 变量名 = (输入参数类型和个数) => 函数实现和返回值类型和个数
   * “=”表示将函数赋给一个变量
   * “=>”左面表示输入参数名称、类型和个数，右边表示函数的实现和返回值类型和参数个数
   *
   */
  val func1 = (x: Int) => x * 2

  //将函数作为值传入map方法中
  val arr2 = arr1.map(func1)
  val arr3 = arr1.map{func1}//map方法传递的是函数名字也可以使用{}
  println(arr2.toBuffer)

}